#+TITLE: Detab Program
#+AUTHOR: Cristian Del Gobbo (pledged)
#+SUBTITLE: Problem taken from the book "The C programming language" by Brian W.Kernighan and Dennis M.Ritchie
#+STARTUP: overview hideblocks indent
#+PROPERTY: header-args:C :main yes :includes <stdio.h> :results output

** Problem Description
   Write a program =detab= that relplaces tabs in the input with the proper number of blanks to space 
   to the next tab stop. Assume a fixed set of tab stops, say every =n= columns. Should =n= be a variable 
   or a symbolic parameter.

** Code
   #+begin_src C :tangle detab.c
     #include <stdio.h>
     #define TAB_SIZE 8 

     int main(){
       int c; 
       int position = 0;

       while((c = getchar()) != EOF){
	 if(c =='\t'){
	   int spaces = TAB_SIZE - (position % TAB_SIZE);
	   for(int i = 0; i<spaces; i++){
	     putchar(' ');
	     position++;
	   }

	 }else if (c == '\n'){
	   putchar(c);
	   position = 0;
	 }else{
	   putchar(c);
	   position++;
	 }
       }
       return 0;
     }

   #+end_src

   #+RESULTS:

   #+begin_src bash
     gcc detab.c -o detab
     echo -e "Hello\tWorld\n" | ./detab

   #+end_src

   #+RESULTS:
   : Hello   World
